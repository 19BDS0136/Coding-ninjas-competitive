/*

				Name: Mehul Chaturvedi
				IIT-Guwahati

*/

/*
Anandi and Jagya were getting married again when they have achieved proper age. Dadi Sa invited 
Alok Nath to do the kanyadaan and give blessings. Alok Nath has 2 blessings. Each bessing is in 
the form of a string consisting of lowercase charaters(a-z) only. But he can give only one
blessing of K length because some priest told him to do so. Thus he decides to generate a
blessing using the other two blessings. While doing this he wants to ensure that happiness 
brought into their life by his blessing is maximum.
The generated blessing is a common subsequence of length K of the two blessings he has. Happiness
of the blessing he generates is calculated by the sum of ASCII values of characters in the blessing
and he wants the happiness to be maximum. If he is not able to generate a common subsequence
of length K then the happiness is 0 (zero). Alok Nath comes to you and asks you to find the maximum 
happiness that can be generated by the two blessings he has.
Input Specification
First line consists of number of test cases t. Each test case consists of two strings b1 (blessing 1),
b2 (blessing 2) and an integer K, each of them in separate lines.
Output Specification
Output consists of t lines each containing an integer denoting the maximum happiness value 
that can be generated by the two blessings.
Constraint
1 <= t <= 50

1 <= length(b1) , length(b2) <= 100 

1 <= K <= 100
Sample Input
2
asdf
asdf
3
anandi
jagya
3
Sample Output
317
0
*/

#include <bits/stdc++.h>

using namespace std;
int go(string s1, string s2, int k){
	int l1 = s1.size();
	int l2 = s2.size();

	
	



}

int main( int argc , char ** argv )
{
	ios_base::sync_with_stdio(false) ; 
	cin.tie(NULL) ; 
	
	int n;
	cin>>n;

	while(n--){
		string s1, s2;
		int k
		cin>>s1>>s2>>k;

		cout << go(s1, s2, k) << '\n';
	}


	return 0 ; 



}
